#version=DEVEL ----------------------------------------------------------------

# License agreement -----------------------------------------------------------
eula --agreed

# Use graphical install -------------------------------------------------------
#graphical

# Use text mode install -------------------------------------------------------
#text

# System language -------------------------------------------------------------
lang ja_JP.UTF-8

# Keyboard layouts ------------------------------------------------------------
keyboard --xlayouts='jp'

# System timezone -------------------------------------------------------------
timezone Asia/Tokyo --utc
timesource --ntp-server=ntp.nict.jp
#timezone Asia/Tokyo --isUtc --ntpservers=ntp.nict.jp

# Network information ---------------------------------------------------------
#network --activate --bootproto=static --device=ens160 --ip=192.168.1.1 --netmask=255.255.255.0 --gateway=192.168.1.254 --ipv6=auto --nameserver=::1,127.0.0.1,192.168.1.254 --hostname=sv-fedora.workgroup

# Use CDROM installation media ------------------------------------------------
#cdrom

# Use hard drive installation media -------------------------------------------
#harddrive --dir= --partition=LABEL=$label

# Use network installation (fedora) -------------------------------------------
url  --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-39&arch=x86_64&country=JP
repo --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-39&arch=x86_64&country=JP    --name=Everything
#url         --url=_WEBADDR_/fedora-$releasever/
#repo    --baseurl=_WEBADDR_/fedora-$releasever/AppStream/ --name=AppStream

# Use network installation (centos stream-8) ----------------------------------
#url  --mirrorlist=http://mirrorlist.centos.org/?release=$releasever-stream&arch=$basearch&repo=baseos
#repo --mirrorlist=http://mirrorlist.centos.org/?release=$releasever-stream&arch=$basearch&repo=appstream            --name=AppStream
#url         --url=_WEBADDR_/centos-stream-$releasever/
#repo    --baseurl=_WEBADDR_/centos-stream-$releasever/AppStream/ --name=AppStream

# Use network installation (centos stream-9) ----------------------------------
#url         --url=https://mirror.stream.centos.org/$releasever-stream/BaseOS/$basearch/os/
#repo    --baseurl=https://mirror.stream.centos.org/$releasever-stream/AppStream/$basearch/os/                       --name=AppStream
#url         --url=_WEBADDR_/centos-stream-$releasever/
#repo    --baseurl=_WEBADDR_/centos-stream-$releasever/AppStream/ --name=AppStream

# Use network installation (miraclelinux) -------------------------------------
#url         --url=https://repo.dist.miraclelinux.net/miraclelinux/$releasever-latest/BaseOS/$basearch/os/
#repo    --baseurl=https://repo.dist.miraclelinux.net/miraclelinux/$releasever-latest/AppStream/$basearch/os/        --name=AppStream
#repo    --baseurl=https://repo.dist.miraclelinux.net/miraclelinux/$releasever-latest/HighAvailability/$basearch/os/ --name=HighAvailability
#repo    --baseurl=https://repo.dist.miraclelinux.net/miraclelinux/$releasever-latest/PowerTools/$basearch/os/       --name=PowerTools
#url         --url=_WEBADDR_/miraclelinux-$releasever/
#repo    --baseurl=_WEBADDR_/miraclelinux-$releasever/AppStream/ --name=AppStream

# Use network installation (rockylinux) ---------------------------------------
#url         --url=https://download.rockylinux.org/pub/rocky/$releasever/BaseOS/$basearch/os/
#repo    --baseurl=https://download.rockylinux.org/pub/rocky/$releasever/AppStream/$basearch/os/                     --name=AppStream
#url         --url=_WEBADDR_/rockylinux-$releasever/
#repo    --baseurl=_WEBADDR_/rockylinux-$releasever/AppStream/ --name=AppStream

# Use network installation (almalinux) ----------------------------------------
#url         --url=https://repo.almalinux.org/almalinux/$releasever/BaseOS/$basearch/os/
#repo    --baseurl=https://repo.almalinux.org/almalinux/$releasever/AppStream/$basearch/os/                          --name=AppStream
#url         --url=_WEBADDR_/almalinux-$releasever/
#repo    --baseurl=_WEBADDR_/almalinux-$releasever/AppStream/ --name=AppStream

# Extra Packages for Enterprise Linux (EPEL) ----------------------------------

# backup ----------------------------------------------------------------------
#repo --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-$releasever&arch=$basearch                   --name=epel             --install
#repo    --baseurl=https://rpms.remirepo.net/enterprise/$releasever/remi/$basearch/                                  --name=remi             --install
#repo --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=epel-$releasever&arch=$basearch&country=JP      --name=epel             --install --cost=5
#repo --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=epel-next-$releasever&arch=$basearch&country=JP --name=epel_next        --install --cost=5
#repo    --baseurl=https://rpms.remirepo.net/enterprise/$releasever/safe/$basearch/                                  --name=remi-safe        --install --cost=10 
#repo    --baseurl=https://rpms.remirepo.net/enterprise/$releasever/remi/$basearch/                                  --name=remi             --install --cost=10 
#repo    --baseurl=https://rpms.remirepo.net/enterprise/$releasever/modular/$basearch/                               --name=remi-modular     --install --cost=10 

# Clear the Master Boot Record ------------------------------------------------
zerombr

# Partition clearing information ----------------------------------------------
#clearpart --all --initlabel --drives=sda
#ignoredisk --only-use=sda
clearpart --all --initlabel --drives=nvme0n1
ignoredisk --only-use=nvme0n1

# System bootloader configuration ---------------------------------------------
#bootloader --append="crashkernel=auto" --location=mbr --boot-drive=sda
bootloader --append="crashkernel=auto" --location=mbr --boot-drive=nvme0n1
autopart --type=lvm --nohome

# Run the Setup Agent on first boot -------------------------------------------
#firstboot --enable

# Reboot after installation ---------------------------------------------------
reboot --eject

# SSH -------------------------------------------------------------------------
#sshpw --username=root r00t

# Root password ----------------------------------------------------------------
rootpw --lock

# User password ----------------------------------------------------------------
user --groups=wheel --name=master --password=master --gecos="Master"

# SELinux configuration -------------------------------------------------------
#selinux --enforcing

# Firewall configuration ------------------------------------------------------
#firewall --disabled

# X Window System configuration information -----------------------------------
#xconfig --startxonboot

# System services -------------------------------------------------------------
#services --disabled chronyd
#services --enabled systemd-timesyncd
services --enabled winbind
services --enabled smb
services --enabled nmb

# -----------------------------------------------------------------------------
%packages
@^minimal-environment
@core
@standard
@gnome-desktop
openssh-server
dnsmasq
tftp-server
@web-server
samba
samba-client
samba-winbind
cifs-utils
fuse
vim
%end
#@dns-server
#bind-utils
#dhcp-server
#@gnome-desktop
#open-vm-tools
#open-vm-tools-desktop

# backup ----------------------------------------------------------------------
#epel-release

# -----------------------------------------------------------------------------
%addon com_redhat_kdump --disable
%end

# -----------------------------------------------------------------------------
#%anaconda
#pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
#pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
#pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
#%end

# -----------------------------------------------------------------------------
%post --log=/root/ks-post.log
echo "--- start post script ---"
# shellcheck disable=SC2154
echo "releasever: 9"
# shellcheck disable=SC2154
echo "basearch  : x86_64"
echo "--- setup zones ---"
#nmcli connection modify ens160 connection.zone home
nmcli -t -f FILENAME connection | sed -n '/^\/etc\//p' | while read -r CONF_FILE
do
    echo "${CONF_FILE}"
    # shellcheck disable=SC2312
    [ -n "$(echo "${CONF_FILE}" | awk '/\/etc\/NetworkManager\//')" ] && sed -i "${CONF_FILE}" -e '/^[[:blank:]]*\[connection\][[:blank:]]*$/ { :l1; n; /\(^$\|\[[[:graph:]]\+\]\)/ { i zone=home' -e '; :l2; n; t; b l2; Q; }; t; b l1; }'
    # shellcheck disable=SC2312
    [ -n "$(echo "${CONF_FILE}" | awk '/\/etc\/sysconfig\//')" ] && sed -i "${CONF_FILE}" -e '$a ZONE=home'
#   cat "${CONF_FILE}"
done
echo "--- setup host information ---"
# shellcheck disable=SC2013
for LINE in $(cat /proc/cmdline)
do
    case "${LINE}" in
        nameserver=*)
            NIC_DNS4="${LINE#nameserver=}"
            echo "NIC_DNS4=${NIC_DNS4}"
            ;;
        ip=*)
            OLD_IFS=${IFS}
            IFS=':'
            set -f
            # shellcheck disable=SC2086
            set -- ${LINE#ip=}
            set +f
            NIC_IPV4="${1}"
            NIC_GATE="${3}"
            NIC_MASK="${4}"
            NIC_FQDN="${5}"
            NIC_NAME="${6}"
            IFS=${OLD_IFS}
            OLD_FQDN="$(cat /etc/hostname)"
            OLD_HOST="${OLD_FQDN%.*}"
            OLD_WGRP="${OLD_FQDN#*.}"
            NIC_HOST="${NIC_FQDN%.*}"
            NIC_WGRP="${NIC_FQDN#*.}"
            echo "${NIC_FQDN}" > /etc/hostname
            sed -i /etc/hosts                                              \
                -e '/^127\.0\.1\.1/d'                                      \
                -e "/^${NIC_IPV4}/d"                                       \
                -e 's/^\([0-9.]\+\)[ \t]\+/\1\t/g'                         \
                -e 's/^\([0-9a-zA-Z:]\+\)[ \t]\+/\1\t\t/g'                 \
                -e "/^127\.0\.0\.1/a ${NIC_IPV4}\t${NIC_FQDN} ${NIC_HOST}" \
                -e "s/${OLD_HOST}/${NIC_HOST}/g"                           \
                -e "s/${OLD_FQDN}/${NIC_FQDN}/g"
            echo "NIC_IPV4=${NIC_IPV4}"
            echo "NIC_GATE=${NIC_GATE}"
            echo "NIC_MASK=${NIC_MASK}"
            echo "NIC_FQDN=${NIC_FQDN}"
            echo "NIC_NAME=${NIC_NAME}"
            echo "OLD_FQDN=${OLD_FQDN}"
            echo "OLD_HOST=${OLD_HOST}"
            echo "OLD_WGRP=${OLD_WGRP}"
            echo "NIC_HOST=${NIC_HOST}"
            echo "NIC_WGRP=${NIC_WGRP}"
            ;;
        *)
            ;;
    esac
done
#[ "$(systemctl is-enabled NetworkManager.service 2> /dev/null || true)" = "enabled" ] && systemctl --quiet restart NetworkManager.service
#[ "$(systemctl is-enabled network.service 2> /dev/null || true)" = "enabled" ] && systemctl --quiet restart network.service
#echo "--- install dnsmasq.conf ---"
#[ -f /etc/NetworkManager/NetworkManager.conf ] && [ -f /etc/dnsmasq.conf ] && echo -e "[main]"$'\n'"dns=dnsmasq" > /etc/NetworkManager/conf.d/dnsmasq.conf
#echo "--- create directory ---"
#mkdir -p /var/tftp
#echo "--- install repositories ---"
#dnf --assumeyes --quiet install "https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm"
#dnf --assumeyes --quiet install "https://rpms.remirepo.net/enterprise/remi-release-9.rpm"
echo "--- install packages ---"
dnf --assumeyes --quiet check-update
dnf --assumeyes --quiet upgrade
dnf --assumeyes --quiet install clamav clamav-update clamav-scanner-systemd
# shellcheck disable=SC2312
[ -n "$(command -v startx 2> /dev/null)" ] && dnf --assumeyes --quiet install ibus-anthy
#[ -n "$(command -v startx 2> /dev/null)" ] && dnf --assumeyes --quiet install ibus-mozc
dnf --assumeyes --quiet autoremove
echo "--- setup services ---"
[ -n "$(command -v avahi-daemon 2> /dev/null)" ] && systemctl --quiet --now disable avahi-daemon.service avahi-daemon.socket
echo "--- complete ---"
%end
#yum list available | grep 'package name'

# backup ----------------------------------------------------------------------
#rpm --import https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-$releasever
#rpm --import https://rpms.remirepo.net/enterprise/$releasever/RPM-GPG-KEY-remi
#for FILE in $(find /etc/pki/rpm-gpg/ -name RPM-GPG-KEY-EPEL*); do rpm --import $FILE; done

# --- eof ---------------------------------------------------------------------
# Memo ------------------------------------------------------------------------
# https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/6/html/installation_guide/sect-kickstart-examples
# https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/6/html/installation_guide/s1-kickstart2-startinginstall
# Memo ------------------------------------------------------------------------
# dnf install pykickstart
# ksvalidator /path/to/kickstart.ks
# Memo ------------------------------------------------------------------------
