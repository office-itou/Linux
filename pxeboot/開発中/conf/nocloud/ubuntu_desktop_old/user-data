#cloud-config
autoinstall:
  version: 1
# =============================================================================
# debug:
#   verbose: true
#   output:
# =============================================================================
# refresh-installer:
#   update: yes
# =============================================================================
# apt:
#   disable_components: []
#   fallback: abort
#   geoip: true
#   mirror-selection:
#     primary:
#     - country-mirror
#     - arches:
#       - amd64
#       - i386
#       uri: http://archive.ubuntu.com/ubuntu
#     - arches:
#       - s390x
#       - arm64
#       - armhf
#       - powerpc
#       - ppc64el
#       - riscv64
#       uri: http://ports.ubuntu.com/ubuntu-ports
#   preserve_sources_list: false
# =============================================================================
# bootcmd:
# =============================================================================
  early-commands:
  - dd if=/dev/zero of=/dev/nvme0n1 bs=1M count=10
# =============================================================================
  storage:
#   grub:
#     reorder_uefi: false
    layout:
      name: lvm
      sizing-policy: all
      match:
        path: /dev/nvme0n1
#       ssd: yes
    swap:
      size: 0
# -----------------------------------------------------------------------------
# /dev/nvme0n1p1: 512MB: /boot/efi
#      nvme0n1p2: 512MB: /boot
#      nvme0n1p3:    -1: vg00
# lv-root       :  100%: /
# storage:
#   config:
#   - { type: disk, ptable: gpt, path: /dev/nvme0n1, wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-nvme0n1 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock, flag: boot, number: 1, preserve: false, grub_device: true, id: partition-0 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock,             number: 2, preserve: false,                    id: partition-1 }
#   - { type: partition, device: disk-nvme0n1, size:   -1, wipe: superblock,             number: 3, preserve: false,                    id: partition-2 }
#   - { type: lvm_volgroup, devices: [partition-2], preserve: false, name: vg00, id: lvm_volgroup-0 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-0, size: 100%, wipe: superblock, preserve: false, name: lv-root, id: lvm_partition-0 }
#   - { type: format, fstype: fat32, volume: partition-0,     preserve: false, id: format-0 }
#   - { type: format, fstype: ext4,  volume: partition-1,     preserve: false, id: format-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-0, preserve: false, id: format-2 }
#   - { type: mount, device: format-0, path: /boot/efi, id: mount-0 }
#   - { type: mount, device: format-1, path: /boot    , id: mount-1 }
#   - { type: mount, device: format-2, path: /        , id: mount-2 }
# -----------------------------------------------------------------------------
# /dev/nvme0n1p1: 512MB: /boot/efi
#      nvme0n1p2: 512MB: /boot
#      nvme0n1p3:    -1: vg00
# /dev/sda1:         -1: vg01
# lv-root       :  100%: /
# lv-home       :  100%: /home
# storage:
#   config:
#   - { type: disk, ptable: gpt, path: /dev/nvme0n1, wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-nvme0n1 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock, flag: boot, number: 1, preserve: false, grub_device: true, id: partition-0 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock,             number: 2, preserve: false,                    id: partition-1 }
#   - { type: partition, device: disk-nvme0n1, size:   -1, wipe: superblock,             number: 3, preserve: false,                    id: partition-2 }
#   - { type: lvm_volgroup, devices: [partition-2], preserve: false, name: vg00, id: lvm_volgroup-0 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-0, size: 100%, wipe: superblock, preserve: false, name: lv-root, id: lvm_partition-0 }
#   - { type: format, fstype: fat32, volume: partition-0,     preserve: false, id: format-0 }
#   - { type: format, fstype: ext4,  volume: partition-1,     preserve: false, id: format-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-0, preserve: false, id: format-2 }
#   - { type: mount, device: format-0, path: /boot/efi, id: mount-0 }
#   - { type: mount, device: format-1, path: /boot    , id: mount-1 }
#   - { type: mount, device: format-2, path: /        , id: mount-2 }
#   - { type: disk, ptable: gpt, path: /dev/sda,     wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-sda     }
#   - { type: partition, device: disk-sda,     size:   -1, wipe: superblock,             number: 1, preserve: false,                    id: partition-3 }
#   - { type: lvm_volgroup, devices: [partition-3], preserve: false, name: vg01, id: lvm_volgroup-1 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-1, size: 100%, wipe: superblock, preserve: false, name: lv-home, id: lvm_partition-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-1, preserve: false, id: format-3 }
#   - { type: mount, device: format-3, path: /home    , id: mount-3 }
# =============================================================================
  identity:
    hostname: sv-ubuntu.workgroup
    realname: Master
    username: master
    password: "$6$rounds=4096$NUxODT.NncFC/y54$GiLCVhSESOQoIiwTYsDFadujln3bMfw0eu3.nL9ddIvsFFAWVc05.Rfo3fT7Kh5xVFjjCSW1NarAYAChB.WLZ1"
#   plain_text_passwd: "master"
#   mkpasswd --method=SHA-512 --rounds=4096 [plain_text_passwd]
# =============================================================================
  locale: ja_JP.UTF-8
  keyboard:
    layout: jp
  timezone: Asia/Tokyo
# =============================================================================
# network:
#   version: 2
#   ethernets:
#     any:
#       match:
#         name: "en*"
#       dhcp4: false
#       addresses:
#       - 192.168.1.1/24
#       gateway4: 192.168.1.254
#       nameservers:
#         search:
#         - workgroup
#         addresses:
#         - ::1
#         - 127.0.0.1
#         - 192.168.1.254
#       dhcp6: true
#       ipv6-privacy: true
# =============================================================================
# ssh:
#   allow-pw: true
#   authorized-keys: []
#   install-server: true
# =============================================================================
# source:
#   id: ubuntu-server
#   search_drivers: true
#   id: ubuntu-desktop
#   search_drivers: true
# -----------------------------------------------------------------------------
# codecs:
#   install: true
# drivers:
#   install: true
# =============================================================================
# updates: security
  updates: all
  packages:
  - standard^
  - apt-transport-https
  - firewalld
  - traceroute
  - network-manager
  - bash-completion
  - build-essential
  - curl
  - vim
  - bc
  - clamav
  - openssh-server
  - dnsmasq
  - dnsutils
  - apache2
  - samba
  - smbclient
  - cifs-utils
  - libnss-winbind
  - ubuntu-desktop
  - ubuntu-gnome-desktop
  - language-pack-ja
  - language-pack-gnome-ja
  - fonts-noto
  - ibus-mozc
  - mozc-utils-gui
  - libreoffice-l10n-ja
  - libreoffice-help-ja
  - firefox-locale-ja
  - thunderbird
  - thunderbird-locale-ja
# -----------------------------------------------------------------------------
  - avahi-daemon
  - bind9
  - bind9utils
  - dnsutils
  - resolvconf
  - isc-dhcp-server
  - minidlna
# =============================================================================
  user-data:
    ntp:
      servers:
      - ntp.nict.jp
    runcmd:
    - export LANG=C;
      set -x;
      set -e;
      NMAN_DIRS="/etc/netplan";
      if [ -d "${NMAN_DIRS}/." ]; then
          ls -l "${NMAN_DIRS}";
          find "${NMAN_DIRS}" \( -name '*.yaml' -a ! -name '99-network-manager-all.yaml' \) -type f -exec rm -f '{}' \; 2>&1;
          ls -l "${NMAN_DIRS}";
      fi;
      exit 0;
#   timezone: Asia/Tokyo
# =============================================================================
  power_state:
    mode: reboot
# =============================================================================
  late-commands:
  - export LANG=C;
    set -x;
    set -e;
    TGET_ROOT="";
    if [ -d "/target/." ]; then
        TGET_ROOT="/target";
    fi;
    PROG_ROOT="/var/log/installer/nocloud";
    PROG_NAME="nocloud-late-commands.sh";
    LOGS_NAME="${TGET_ROOT}${PROG_ROOT}/${PROG_NAME%.*}.log";
    mkdir -p "${TGET_ROOT}${PROG_ROOT}";
    cd "${TGET_ROOT}${PROG_ROOT}" || exit 1;
    CMD_LINE="$(cat /proc/cmdline)";
    for LINE in ${CMD_LINE};
    do
        case "${LINE}" in
            ds=nocloud* )
                SEED="${LINE#*\;s*=}";
                case "${SEED}" in
                    file://* | /*        )
                        FILE="${SEED#*/}";
                        cp "${FILE%/*}/${PROG_NAME}" ./;
                        ;;
                    http://* | https://* )
                        URL="${SEED}";
                        wget "${URL%/*}/${PROG_NAME}";
                        ;;
                    * ) ;;
                esac;
                ;;
            * ) ;;
        esac;
    done;
    if [ ! -f "./${PROG_NAME}" ]; then
        exit 0;
    fi;
    chmod +x "./${PROG_NAME}";
    if [ -d "${TGET_ROOT}/." ]; then
        if [ -n "${SUBIQUITY_ROOT:-}" ]; then
            echo "curtin in-target --target=/target -- sh -c '${PROG_ROOT}/${PROG_NAME}' -n";
            echo "start";
            curtin in-target --target=/target -- sh -c ''"${PROG_ROOT}"/"${PROG_NAME}"' -n' > "${LOGS_NAME}" 2>&1;
            echo "complete";
        else
            echo "in-target --pass-stdout sh -c '${PROG_ROOT}/${PROG_NAME}' -n";
            echo "start";
            in-target --pass-stdout sh -c ''"${PROG_ROOT}"/"${PROG_NAME}"' -n' > "${LOGS_NAME}" 2>&1;
            echo "complete";
        fi;
    else
        echo "\"./${PROG_NAME}\" -n";
        echo "start";
        "./${PROG_NAME}" -n > "${LOGS_NAME}" 2>&1;
        echo "complete";
    fi;
    NMAN_DIRS="/etc/netplan";
    BACK_DIRS="${TGET_ROOT}${PROG_ROOT}/orig${NMAN_DIRS}";
    if [ -d "${NMAN_DIRS}/." ] && [ -d "${BACK_DIRS}/." ]; then
        ls -l "${NMAN_DIRS}";
        find "${BACK_DIRS}" \( -name '*.yaml' -a ! -name '99-network-manager-all.yaml' \) -type f -exec cp --archive '{}' "${NMAN_DIRS}" \; 2>&1;
        ls -l "${NMAN_DIRS}";
    fi;
    NMAN_DIRS="/etc/NetworkManager";
    if [ -d "${NMAN_DIRS}/." ] && [ -d "${TGET_ROOT}${NMAN_DIRS}/." ]; then
        ls -l "${NMAN_DIRS}";
        cp --archive "${TGET_ROOT}${NMAN_DIRS}"/* "${NMAN_DIRS}" 2>&1;
        ls -l "${NMAN_DIRS}";
    fi;
    exit 0;
# =============================================================================
# memo:
#   https://ubuntu.com/server/docs/install/autoinstall-reference
#   https://github.com/canonical/cloud-init/
#   https://cloudinit.readthedocs.io/
#   https://curtin.readthedocs.io/
# =============================================================================
# Created at 202x/xx/xx xx:xx:xx
# === EOF =====================================================================
