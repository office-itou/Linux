#cloud-config
autoinstall:
  version: 1
# =============================================================================
# debug:
#   verbose: true
#   output:
# =============================================================================
# refresh-installer:
#   update: yes
# =============================================================================
# apt:
#   disable_components: []
#   fallback: abort
#   geoip: true
#   mirror-selection:
#     primary:
#     - country-mirror
#     - arches:
#       - amd64
#       - i386
#       uri: http://archive.ubuntu.com/ubuntu
#     - arches:
#       - s390x
#       - arm64
#       - armhf
#       - powerpc
#       - ppc64el
#       - riscv64
#       uri: http://ports.ubuntu.com/ubuntu-ports
#   preserve_sources_list: false
# =============================================================================
  early-commands:
  - ' export LANG=C;
      FUNC_NAME="early-commands";
      echo "### start ${FUNC_NAME} ###";
      dd if=/dev/zero of=/dev/nvme0n1 bs=1M count=10;
      echo "### complete ${FUNC_NAME} ###";'
# =============================================================================
  storage:
#   grub:
#     reorder_uefi: false
    layout:
      name: lvm
      sizing-policy: all
      match:
        path: /dev/nvme0n1
#       ssd: yes
    swap:
      size: 0
# -----------------------------------------------------------------------------
# /dev/nvme0n1p1: 512MB: /boot/efi
#      nvme0n1p2: 512MB: /boot
#      nvme0n1p3:    -1: vg00
# lv-root       :  100%: /
# storage:
#   config:
#   - { type: disk, ptable: gpt, path: /dev/nvme0n1, wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-nvme0n1 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock, flag: boot, number: 1, preserve: false, grub_device: true, id: partition-0 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock,             number: 2, preserve: false,                    id: partition-1 }
#   - { type: partition, device: disk-nvme0n1, size:   -1, wipe: superblock,             number: 3, preserve: false,                    id: partition-2 }
#   - { type: lvm_volgroup, devices: [partition-2], preserve: false, name: vg00, id: lvm_volgroup-0 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-0, size: 100%, wipe: superblock, preserve: false, name: lv-root, id: lvm_partition-0 }
#   - { type: format, fstype: fat32, volume: partition-0,     preserve: false, id: format-0 }
#   - { type: format, fstype: ext4,  volume: partition-1,     preserve: false, id: format-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-0, preserve: false, id: format-2 }
#   - { type: mount, device: format-0, path: /boot/efi, id: mount-0 }
#   - { type: mount, device: format-1, path: /boot    , id: mount-1 }
#   - { type: mount, device: format-2, path: /        , id: mount-2 }
# -----------------------------------------------------------------------------
# /dev/nvme0n1p1: 512MB: /boot/efi
#      nvme0n1p2: 512MB: /boot
#      nvme0n1p3:    -1: vg00
# /dev/sda1:         -1: vg01
# lv-root       :  100%: /
# lv-home       :  100%: /home
# storage:
#   config:
#   - { type: disk, ptable: gpt, path: /dev/nvme0n1, wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-nvme0n1 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock, flag: boot, number: 1, preserve: false, grub_device: true, id: partition-0 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock,             number: 2, preserve: false,                    id: partition-1 }
#   - { type: partition, device: disk-nvme0n1, size:   -1, wipe: superblock,             number: 3, preserve: false,                    id: partition-2 }
#   - { type: lvm_volgroup, devices: [partition-2], preserve: false, name: vg00, id: lvm_volgroup-0 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-0, size: 100%, wipe: superblock, preserve: false, name: lv-root, id: lvm_partition-0 }
#   - { type: format, fstype: fat32, volume: partition-0,     preserve: false, id: format-0 }
#   - { type: format, fstype: ext4,  volume: partition-1,     preserve: false, id: format-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-0, preserve: false, id: format-2 }
#   - { type: mount, device: format-0, path: /boot/efi, id: mount-0 }
#   - { type: mount, device: format-1, path: /boot    , id: mount-1 }
#   - { type: mount, device: format-2, path: /        , id: mount-2 }
#   - { type: disk, ptable: gpt, path: /dev/sda,     wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-sda     }
#   - { type: partition, device: disk-sda,     size:   -1, wipe: superblock,             number: 1, preserve: false,                    id: partition-3 }
#   - { type: lvm_volgroup, devices: [partition-3], preserve: false, name: vg01, id: lvm_volgroup-1 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-1, size: 100%, wipe: superblock, preserve: false, name: lv-home, id: lvm_partition-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-1, preserve: false, id: format-3 }
#   - { type: mount, device: format-3, path: /home    , id: mount-3 }
# =============================================================================
  identity:
    hostname: sv-ubuntu.workgroup
    realname: Master
    username: master
    password: "$1$9wmVQBSz$zrhHtC5Htdyz5fLjYngVh."
#   plain_text_passwd: "master"
#   openssl passwd [plain_text_passwd]
#   (run in an environment equivalent to the OS to be installed)
# =============================================================================
  locale: ja_JP.UTF-8
  keyboard:
    layout: jp
  timezone: Asia/Tokyo
# =============================================================================
# network:
#   version: 2
#   ethernets:
#     any:
#       match:
#         name: "en*"
#       dhcp4: false
#       addresses:
#       - 192.168.1.1/24
#       gateway4: 192.168.1.254
#       nameservers:
#         search:
#         - workgroup
#         addresses:
#         - ::1
#         - 127.0.0.1
#         - 192.168.1.254
#       dhcp6: true
#       ipv6-privacy: true
# =============================================================================
# ssh:
#   allow-pw: true
#   authorized-keys: []
#   install-server: true
# =============================================================================
# source:
#   id: ubuntu-server
#   search_drivers: true
#   id: ubuntu-desktop
#   search_drivers: true
# -----------------------------------------------------------------------------
# codecs:
#   install: true
# drivers:
#   install: true
# =============================================================================
# updates: security
  updates: all
  packages:
  - standard^
  - apt-transport-https
  - firewalld
  - traceroute
  - network-manager
  - openvswitch-switch
  - bash-completion
  - build-essential
  - curl
  - vim
  - bc
  - clamav
  - openssh-server
  - dnsmasq
  - bind9-dnsutils
  - apache2
  - samba
  - smbclient
  - cifs-utils
  - libnss-winbind
# - ubuntu-desktop
# - ubuntu-gnome-desktop
# - language-pack-ja
# - language-pack-gnome-ja
# - fonts-noto
# - ibus-mozc
# - mozc-utils-gui
# - libreoffice-l10n-ja
# - libreoffice-help-ja
# - firefox-locale-ja
# - thunderbird
# - thunderbird-locale-ja
# -----------------------------------------------------------------------------
# - avahi-daemon
# - bind9
# - bind9-utils
# - bind9-dnsutils
# - resolvconf
# - isc-dhcp-server
# - minidlna
# =============================================================================
  user-data:
    ntp:
      servers:
      - ntp.nict.jp
    runcmd:
    - ' export LANG=C;
        FUNC_NAME="user-data runcmd";
        echo "### start ${FUNC_NAME} ###";'
#   - ' export LANG=C;
#       FUNC_NAME="user-data runcmd <change root password>";
#       echo "### start ${FUNC_NAME} ###";
#       echo "root:r00t" | chpasswd;
#       echo "### complete ${FUNC_NAME} ###";'
#   - ' export LANG=C;
#       FUNC_NAME="user-data runcmd <change ssh root login>";
#       echo "### start ${FUNC_NAME} ###";
#       echo "PermitRootLogin yes" > /etc/ssh/sshd_config.d/root_login.conf;
#       echo "### complete ${FUNC_NAME} ###";'
    - ' export LANG=C;
        FUNC_NAME="user-data runcmd <system setup>";
        echo "### start ${FUNC_NAME} ###";
        TGET_ROOT="";
        test -d "/target/."
        && TGET_ROOT="/target";
        SEED_TYPE="nocloud";
        PROG_NAME="/var/log/installer/${SEED_TYPE}/${SEED_TYPE}-late-commands.sh";
        LOGS_NAME="${TGET_ROOT}${PROG_NAME%.*}.current.log";
        echo "TGET_ROOT=${TGET_ROOT}";
        echo "SEED_TYPE=${SEED_TYPE}";
        echo "PROG_NAME=${PROG_NAME}";
        echo "LOGS_NAME=${LOGS_NAME}";
        test -n "${TGET_ROOT}${PROG_NAME:-}"
        && (test -f "${TGET_ROOT}${PROG_NAME}"
            && (echo "=== start ${TGET_ROOT}${PROG_NAME} ===";
                test -x "${TGET_ROOT}${PROG_NAME}"
                || chmod +x "${TGET_ROOT}${PROG_NAME}";
                ((test -n "${TGET_ROOT}"
                    && test -d "${TGET_ROOT}/."
                        && ((test -n "${SUBIQUITY_ROOT:-}"
                            && (curtin in-target --target=/target -- sh -c "${PROG_NAME} -n -s;" | tee -a "${LOGS_NAME}";))
                            || (in-target --pass-stdout sh -c "${PROG_NAME} -n -s;" | tee -a "${LOGS_NAME}";)))
                || ("${TGET_ROOT}${PROG_NAME}" -n -s | tee -a "${LOGS_NAME}";));
                echo "=== complete ${TGET_ROOT}${PROG_NAME} ===";));
        echo "### complete ${FUNC_NAME} ###";'
    - ' export LANG=C;
        FUNC_NAME="user-data runcmd";
        echo "### complete ${FUNC_NAME} ###";'
#   timezone: Asia/Tokyo
# =============================================================================
# runcmd:
# - export LANG=C;
#   echo "=== start runcmd ===";
#   echo "=== complete runcmd ===";
#   ls -l /etc/resolv.conf*;
#   rm /etc/resolv.conf;
#   ln -s /etc/resolv.conf.manually-configured /etc/resolv.conf;
#   ls -l /etc/resolv.conf*;
# =============================================================================
  power_state:
    mode: reboot
# =============================================================================
  late-commands:
  - ' export LANG=C;
      FUNC_NAME="late-commands";
      echo "### start ${FUNC_NAME} ###";
      TGET_ROOT="";
      test -d "/target/."
      && TGET_ROOT="/target";
      SEED_TYPE="nocloud";
      PROG_NAME="/var/log/installer/${SEED_TYPE}/${SEED_TYPE}-late-commands.sh";
      LOGS_NAME="${TGET_ROOT}${PROG_NAME%.*}.targets.log";
      COMD_PARM="${TGET_ROOT}${PROG_NAME%.*}.prm";
      echo "TGET_ROOT=${TGET_ROOT}";
      echo "SEED_TYPE=${SEED_TYPE}";
      echo "PROG_NAME=${PROG_NAME}";
      echo "LOGS_NAME=${LOGS_NAME}";
      echo "COMD_PARM=${COMD_PARM}";
      mkdir -p "${TGET_ROOT}${PROG_NAME%/*}";
      cat /proc/cmdline > "${COMD_PARM}";
      cd "${TGET_ROOT}${PROG_NAME%/*}" || return 1;
      test -f "/preseed.cfg"
      && (cp "/preseed.cfg"      ./;
          cp "/${TGET_ROOT}${PROG_NAME##*/}" ./;);
      COMD_LINE="$(cat "${COMD_PARM}")";
      echo "COMD_LINE=${COMD_LINE}";
      for LINE in ${COMD_LINE};
      do
          SEED_ADDR="";
          case "${LINE}" in
              iso-url=*.iso  | url=*.iso )                           ;;
              preseed/file=* | file=*    ) SEED_ADDR="${LINE#*file=}";;
              preseed/url=*  | url=*     ) SEED_ADDR="${LINE#*url=}" ;;
              ds=nocloud*                ) SEED_ADDR="${LINE#*\;s*=}";;
              *                          )                           ;;
          esac;
          case "${SEED_ADDR}" in
              http://* | https://* )
                  case "${SEED_TYPE}" in
                      preseed ) wget -O preseed.cfg "${SEED_ADDR}";;
                      nocloud ) wget "${SEED_ADDR}/user-data"     ;;
                      *       )                                   ;;
                  esac;
                  wget "${SEED_ADDR%/*}/${PROG_NAME##*/}";
                  ;;
              file://* | /*        )
                  SEED_FILE="${SEED_TYPE#*:/}";
                  case "${SEED_TYPE}" in
                      preseed )
                          cp "${SEED_FILE}"                     ./preseed.cfg;
                          cp "${SEED_FILE%/*}/${PROG_NAME##*/}" ./;
                          ;;
                      nocloud )
                          cp "${SEED_FILE}/user-data"        ./;
                          cp "${SEED_FILE}/${PROG_NAME##*/}" ./;
                          ;;
                      *       ) ;;
                  esac;
                  ;;
              *                    ) ;;
          esac;
      done;
      test -n "${TGET_ROOT}${PROG_NAME:-}"
      && (test -f "${TGET_ROOT}${PROG_NAME}"
          && (echo "=== start ${TGET_ROOT}${PROG_NAME} ===";
              test -x "${TGET_ROOT}${PROG_NAME}"
              || chmod +x "${TGET_ROOT}${PROG_NAME}";
              ((test -n "${TGET_ROOT}"
                  && test -d "${TGET_ROOT}/."
                      && ((test -n "${SUBIQUITY_ROOT:-}"
                          && (curtin in-target --target=/target -- sh -c "${PROG_NAME} -b;" | tee -a "${LOGS_NAME}";))
                          || (in-target --pass-stdout sh -c "${PROG_NAME} -b;" | tee -a "${LOGS_NAME}";)))
              || ("${TGET_ROOT}${PROG_NAME}" -b | tee -a "${LOGS_NAME}";));
              echo "=== complete ${TGET_ROOT}${PROG_NAME} ===";));
      echo "### complete ${FUNC_NAME} ###";'
# =============================================================================
# memo:
#   https://ubuntu.com/server/docs/install/autoinstall-reference
#   https://github.com/canonical/cloud-init/
#   https://cloudinit.readthedocs.io/
#   https://curtin.readthedocs.io/
# =============================================================================
# Created at 202x/xx/xx xx:xx:xx
# === EOF =====================================================================
