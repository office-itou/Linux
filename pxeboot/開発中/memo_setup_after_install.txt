# *****************************************************************************
# setup after install
# *****************************************************************************

    # =========================================================================
    # common
    # =========================================================================
        sudo apt-get install isolinux isomd5sum xorriso xxd 7zip pxelinux rsync syslinux-efi lz4 lzop grub-pc-bin
        sudo apt-get install tree shellcheck
        chmod go=rx ${HOME}
    # --- backup install shell ------------------------------------------------
        sudo mv install.sh install.sh.user.lst install
    # --- create shell link ---------------------------------------------------
        ln -s /mnt/hgfs/workspace/Image/linux/bin/install.sh                     .
        ln -s /mnt/hgfs/workspace/Image/linux/bin/_sv-server/install.sh.user.lst .
        ln -s /mnt/hgfs/workspace/Image/linux/bin/mk_custom_iso.sh               .
        ln -s /mnt/hgfs/workspace/Image/linux/bin/mk_pxeboot_conf.sh             .
    # --- create work directory -----------------------------------------------
        sudo ./mk_custom_iso.sh --link
    #   sudo ./mk_pxeboot_conf.sh --link
    # +++ [ setup pxeboot server ] ++++++++++++++++++++++++++++++++++++++++++++
        sudo sed -i /etc/default/tftpd-hpa                       \
            -e "/^TFTP_DIRECTORY=/ s%=.*$%=\"/var/lib/tftpboot\"%" \
            -e '/^TFTP_OPTIONS=/   s/=.*$/="--secure --verbose"/'
        sudo sed -i /etc/dnsmasq.d/pxe.conf      \
            -e '/^#pxe-prompt=/            s/^#//' \
            -e '/^#pxe-service=x86PC/      s/^#//' \
            -e '/^#pxe-service=BC_EFI/     s/^#//' \
            -e '/^#pxe-service=x86-64_EFI/ s/^#//'
        sudo systemctl restart dnsmasq.service tftpd-hpa.service
    # +++ [ setup nfs ] +++++++++++++++++++++++++++++++++++++++++++++++++++++++
        sudo apt-get install nfs-kernel-server
        sudo firewall-cmd --add-service=nfs --permanent --zone=home
        sudo firewall-cmd --reload
        sudo firewall-cmd --list-all --zone=home
        sudo sed -i.orig /etc/exports -e '$ a /home 192.168.1.0/24(ro,no_subtree_check,no_root_squash,no_wdelay)'
        sudo exportfs -ar
        sudo exportfs -v

    # =========================================================================
    # server pc
    # =========================================================================
    # <<< create config link >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        sudo mv ~/share/conf ~/share/conf.back
    #   sudo mv ~/share/imgs ~/share/imgs.back
    #   sudo mv ~/share/isos ~/share/isos.back
    #   sudo mv ~/share/rmak ~/share/rmak.back
        sudo ln -s /mnt/hgfs/workspace/Image/linux/bin/conf ~/share/
    #   sudo ln -s /mnt/share.nfs/master/share/{imgs,isos,rmak} ~/share/
        ls -l ~/share/
    # --- exec shell ----------------------------------------------------------
        sudo ./mk_custom_iso.sh --download a
        sudo ./mk_pxeboot_conf.sh --create
        sudo ./mk_custom_iso.sh --create a

    # =========================================================================
    # link pc [ debian / ubuntu ]
    # =========================================================================
        cat <<- _EOT_ | sed 's/^ *//g' | sudo tee -a "/etc/fstab"
			192.168.1.10:/home    /mnt/share.nfs    nfs    defaults    0 0 
_EOT_
        sudo systemctl daemon-reload
        sudo mount /mnt/share.nfs
        df -h
    # -------------------------------------------------------------------------
        sudo mv ~/share/conf ~/share/conf.back
        sudo mv ~/share/imgs ~/share/imgs.back
        sudo mv ~/share/isos ~/share/isos.back
        sudo mv ~/share/rmak ~/share/rmak.back
        sudo ln -s /mnt/hgfs/workspace/Image/linux/bin/conf ~/share/
        sudo ln -s /mnt/share.nfs/master/share/{imgs,isos,rmak} ~/share/
        ls -l ~/share/
    # --- exec shell ----------------------------------------------------------
    #   sudo ./mk_custom_iso.sh --download a
        sudo ./mk_pxeboot_conf.sh --create
    #   sudo ./mk_custom_iso.sh --create a

    # =========================================================================
    # link pc [ fedora / centos ]
    # =========================================================================
        sudo dnf -y install \
            syslinux grub2-pc-modules grub2-efi-x64-modules \
            p7zip \
            tree shellcheck
        sudo systemctl enable --now tftp.socket
        chmod go=rx ${HOME}
    # --- backup install shell ------------------------------------------------
        sudo mv install.sh install.sh.user.lst install
    # --- create shell link ---------------------------------------------------
        ln -s /mnt/hgfs/workspace/Image/linux/bin/install.sh                     .
        ln -s /mnt/hgfs/workspace/Image/linux/bin/_sv-server/install.sh.user.lst .
        ln -s /mnt/hgfs/workspace/Image/linux/bin/mk_custom_iso.sh               .
        ln -s /mnt/hgfs/workspace/Image/linux/bin/mk_pxeboot_conf.sh             .
    # --- create work directory -----------------------------------------------
        sudo ./mk_custom_iso.sh --link
    #   sudo ./mk_pxeboot_conf.sh --link
    # +++ [ setup pxeboot server ] ++++++++++++++++++++++++++++++++++++++++++++
#       sudo sed -i /etc/default/tftpd-hpa                       \
#           -e "/^TFTP_DIRECTORY=/ s%=.*$%=\"/var/lib/tftpboot\"%" \
#           -e '/^TFTP_OPTIONS=/   s/=.*$/="--secure --verbose"/'
        sudo sed -i /etc/dnsmasq.d/pxe.conf      \
            -e '/^#pxe-prompt=/            s/^#//' \
            -e '/^#pxe-service=x86PC/      s/^#//' \
            -e '/^#pxe-service=BC_EFI/     s/^#//' \
            -e '/^#pxe-service=x86-64_EFI/ s/^#//'
        sudo systemctl restart dnsmasq.service
    # +++ [ setup nfs ] +++++++++++++++++++++++++++++++++++++++++++++++++++++++
        sudo dnf -y install nfs-utils
        sudo firewall-cmd --add-service=nfs --permanent --zone=home
        sudo firewall-cmd --reload
        sudo firewall-cmd --list-all --zone=home
        sudo sed -i.orig /etc/exports -e '$ a /home 192.168.1.0/24(ro,no_subtree_check,no_root_squash,no_wdelay)'
        sudo exportfs -ar
        sudo exportfs -v
    # -------------------------------------------------------------------------
        sudo cp -a /usr/share/syslinux/memdisk /var/lib/tftpboot/
        sudo cp -a /usr/lib/grub/i386-pc/*     /var/lib/tftpboot/boot/grub/i386-pc/
        sudo cp -a /usr/lib/grub/x86_64-efi/*  /var/lib/tftpboot/boot/grub/x86_64-efi/
        sudo cp -a /usr/share/grub/*.pf2       /var/lib/tftpboot/boot/grub/fonts/
    # --- samba server --------------------------------------------------------
        sudo setsebool -P samba_enable_home_dirs 1
        sudo setsebool -P samba_export_all_ro 1
        sudo setsebool -P samba_export_all_rw 1
    # --- web server ----------------------------------------------------------
        sudo setsebool -P httpd_enable_homedirs 1
        sudo setsebool -P httpd_use_nfs 1
        sudo setsebool -P httpd_use_fusefs 1
    # --- tftp server ---------------------------------------------------------
         sudo setsebool -P tftp_home_dir 1
    # -------------------------------------------------------------------------
        cat <<- _EOT_ | sed 's/^ *//g' | sudo tee -a "/etc/fstab"
			192.168.1.10:/home    /mnt/share.nfs    nfs    defaults    0 0 
_EOT_
        sudo systemctl daemon-reload
        sudo mount /mnt/share.nfs
        df -h
    # -------------------------------------------------------------------------
        sudo mv ~/share/conf ~/share/conf.back
        sudo mv ~/share/imgs ~/share/imgs.back
        sudo mv ~/share/isos ~/share/isos.back
        sudo mv ~/share/rmak ~/share/rmak.back
        sudo ln -s /mnt/hgfs/workspace/Image/linux/bin/conf ~/share/
        sudo ln -s /mnt/share.nfs/master/share/{imgs,isos,rmak} ~/share/
        ls -l ~/share/
    # --- exec shell ----------------------------------------------------------
#       sudo ./mk_custom_iso.sh --download a
        sudo ./mk_pxeboot_conf.sh --create
#       sudo ./mk_custom_iso.sh --create a


        sudo sed -e '/^ExecStart=/ s% -s % -s -v -m /etc/tftpd.map %' -i /usr/lib/systemd/system/tftp.service
        cat <<- _EOT_ | sed 's/^ *//g' | sudo tee /etc/tftpd.map
			rg \\ /
_EOT_
        sudo systemctl daemon-reload
        sudo systemctl restart tftp.socket
        ps -Af | grep tftp

    # =========================================================================
    # Memo: SELinux
    # =========================================================================
    # --- 全初期化 --------------------------------------------------------------
        sudo touch /.autorelabel
    # --- SELinux 確認・解除・設定
        sudo getenforce
        sudo setenforce 0 or 1
        sudo getenforce
    # --- サイレント拒否 --------------------------------------------------------
        sudo seinfo                     # サイレント拒否が何個あるか確認する(Dontaudit項目)
        sudo sesearch --dontaudit       # サイレント拒否の一覧を表示する
        sudo semodule -DB               # サイレント拒否を無効化する(ロギングするようになる)
        sudo semodule -B                # サイレント拒否を有効化する(再度ロギングしなくなる)

