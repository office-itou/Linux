 ::: GPT :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
dpkg --no-pager -l util-linux grub-pc-bin syslinux dosfstools mtools exfatprogs ntfs-3g
sudo apt-get install util-linux grub-pc-bin syslinux dosfstools mtools exfatprogs ntfs-3g
# --- partition and format ----------------------------------------------------
# [ USB device: /dev/sdb ]
lsblk /dev/sdb
sudo bash -c 'umount -q ./usb || umount -q -lf ./usb'
sudo sfdisk --wipe always --wipe-partitions always /dev/sdb << _EOT_
label: gpt
first-lba: 34
34,2014,21686148-6449-6E6F-744E-656564454649,
,256MiB,C12A7328-F81F-11D2-BA4B-00A0C93EC93B,
,,EBD0A0A2-B9E5-4433-87C0-68B6B72699C7,
_EOT_
sudo mkfs.vfat -F 32             /dev/sdb2
sudo mkfs.vfat -F 32 -n "CIDATA" /dev/sdb3
#sudo mkfs.exfat      -n "CIDATA" /dev/sdb3
#sudo mkfs.ntfs -Q    -L "CIDATA" /dev/sdb3
# --- boot loader -------------------------------------------------------------
sudo mount /dev/sdb2 ./usb/
sudo grub-install --target=i386-pc    --recheck   --boot-directory=./usb/boot /dev/sdb
sudo grub-install --target=x86_64-efi --removable --boot-directory=./usb/boot --efi-directory=./usb
# --- directory ---------------------------------------------------------------
sudo mkdir -p ./usb/.disk
sudo touch ./usb/.disk/info
# --- grub.cfg ----------------------------------------------------------------
cat << '_EOT_' | sudo tee ./usb/boot/grub/grub.cfg > /dev/null
set default=0
set timeout=-1

search.fs_label "CIDATA" isopart hd1,gpt3

loadfont $prefix/fonts/unicode.pf2

set lang=ja_JP

set gfxmode=1280x720
insmod all_video
insmod gfxterm
terminal_output gfxterm

set menu_color_normal=cyan/blue
set menu_color_highlight=white/blue

grub_platform

insmod play
play 960 440 1 0 4 440 1

menuentry 'Unattended installation (Debian 12:testing)' {
    set gfxpayload=keep
    set isofile="/images/debian-testing-amd64-netinst.iso"
    set isoscan="$isofile (testing)"
    set isodist="debian/testing"
    set preseed="/hd-media/preseed/debian/preseed.cfg"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-layouts=jp keyboard-model=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    linux   ($isopart)/install.amd/$isodist/vmlinuz root=$isopart iso-scan/ask_which_iso="[sdb3] $isoscan" $locales fsck.mode=skip auto=true file=$preseed netcfg/disable_autoconfig=true ---
    initrd  ($isopart)/install.amd/$isodist/initrd.gz
}
menuentry 'Unattended installation (Debian 11:stable)' {
    set gfxpayload=keep
    set isofile="/images/debian-11.6.0-amd64-netinst.iso"
    set isoscan="$isofile (stable - 11.6)"
    set isodist="debian/stable"
    set preseed="/hd-media/preseed/debian/preseed.cfg"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-layouts=jp keyboard-model=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    linux   ($isopart)/install.amd/$isodist/vmlinuz root=$isopart iso-scan/ask_which_iso="[sdb3] $isoscan" $locales fsck.mode=skip auto=true file=$preseed netcfg/disable_autoconfig=true ---
    initrd  ($isopart)/install.amd/$isodist/initrd.gz
}
menuentry 'Unattended installation (Debian 10:oldstable)' {
    set gfxpayload=keep
    set isofile="/images/debian-10.13.0-amd64-netinst.iso"
    set isoscan="$isofile (oldstable - 10.13)"
    set isodist="debian/oldstable"
    set preseed="/hd-media/preseed/debian/preseed_old.cfg"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-layouts=jp keyboard-model=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    linux   ($isopart)/install.amd/$isodist/vmlinuz root=$isopart iso-scan/ask_which_iso="[sdb3] $isoscan" $locales fsck.mode=skip auto=true file=$preseed netcfg/disable_autoconfig=true ---
    initrd  ($isopart)/install.amd/$isodist/initrd.gz
}
menuentry 'Unattended installation (Debian 9:oldoldstable)' {
    set gfxpayload=keep
    set isofile="/images/debian-9.13.0-amd64-netinst.iso"
    set isoscan="$isofile (oldstable - 9.13)"
    set isodist="debian/oldoldstable"
    set preseed="/hd-media/preseed/debian/preseed_old.cfg"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-layouts=jp keyboard-model=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    linux   ($isopart)/install.amd/$isodist/vmlinuz root=$isopart iso-scan/ask_which_iso="[sdb3] $isoscan" $locales fsck.mode=skip auto=true file=$preseed netcfg/disable_autoconfig=true ---
    initrd  ($isopart)/install.amd/$isodist/initrd.gz
}
menuentry 'Unattended installation (Ubuntu 23.04:Lunar Lobster)' {
    set gfxpayload=keep
    set isofile="/images/lunar-live-server-amd64.iso"
    set isoscan="iso-scan/filename=$isofile"
    set isodist="ubuntu/lunar"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-configuration/layoutcode=jp keyboard-configuration/modelcode=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    loopback loop ($isopart)$isofile
    linux   (loop)/casper/vmlinuz root=$isopart $isoscan $locales fsck.mode=skip autoinstall ip=dhcp ipv6.disable=1 ---
#   initrd  (loop)/casper/initrd
    initrd  ($isopart)/install.amd/$isodist/initrd.img
    loopback --delete loop
}
menuentry 'Unattended installation (Ubuntu 22.10:Kinetic Kudu)' {
    set gfxpayload=keep
    set isofile="/images/ubuntu-22.10-live-server-amd64.iso"
    set isoscan="iso-scan/filename=$isofile"
    set isodist="ubuntu/kinetic"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-configuration/layoutcode=jp keyboard-configuration/modelcode=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    loopback loop ($isopart)$isofile
    linux   (loop)/casper/vmlinuz root=$isopart $isoscan $locales fsck.mode=skip autoinstall ip=dhcp ipv6.disable=1 ---
#   initrd  (loop)/casper/initrd
    initrd  ($isopart)/install.amd/$isodist/initrd.img
    loopback --delete loop
}
menuentry 'Unattended installation (Ubuntu 22.04:Jammy Jellyfish)' {
    set gfxpayload=keep
    set isofile="/images/ubuntu-22.04.2-live-server-amd64.iso"
    set isoscan="iso-scan/filename=$isofile"
    set isodist="ubuntu/jammy"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-configuration/layoutcode=jp keyboard-configuration/modelcode=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    loopback loop ($isopart)$isofile
    linux   (loop)/casper/vmlinuz root=$isopart $isoscan $locales fsck.mode=skip autoinstall ip=dhcp ipv6.disable=1 ---
#   initrd  (loop)/casper/initrd
    initrd  ($isopart)/install.amd/$isodist/initrd.img
    loopback --delete loop
}
menuentry 'Unattended installation (Ubuntu 20.04:Focal Fossa)' {
    set gfxpayload=keep
    set isofile="/images/ubuntu-20.04.6-live-server-amd64.iso"
    set isoscan="iso-scan/filename=$isofile"
    set isodist="ubuntu/focal"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-configuration/layoutcode=jp keyboard-configuration/modelcode=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    loopback loop ($isopart)$isofile
    linux   (loop)/casper/vmlinuz root=$isopart $isoscan $locales fsck.mode=skip autoinstall ip=dhcp ipv6.disable=1 ---
#   initrd  (loop)/casper/initrd
    initrd  ($isopart)/install.amd/$isodist/initrd.img
    loopback --delete loop
}
menuentry 'Unattended installation (Ubuntu 18.04:Bionic Beaver)' {
    set gfxpayload=keep
    set isofile="/images/ubuntu-18.04.6-server-amd64.iso"
    set isoscan="$isofile (bionic - 18.04)"
    set isodist="ubuntu/bionic"
    set preseed="/hd-media/preseed/ubuntu/preseed_old.cfg"
    set locales="locale=ja_JP.UTF-8 timezone=Asia/Tokyo keyboard-layouts=jp keyboard-model=jp106"
    if [ "$grub_platform" = "efi" ]; then rmmod tpm; fi
    linux   ($isopart)/install.amd/$isodist/vmlinuz root=$isopart iso-scan/ask_which_iso="[sdb3] $isoscan" $locales fsck.mode=skip auto=true file=$preseed netcfg/disable_autoconfig=true ---
    initrd  ($isopart)/install.amd/$isodist/initrd.gz
}

menuentry "System shutdown" {
    echo "System shutting down..."
    halt
}
menuentry "System restart" {
    echo "System rebooting..."
    reboot
}
_EOT_
sudo umount ./usb/
# --- directory ---------------------------------------------------------------
sudo mount /dev/sdb3 ./usb/
sudo mkdir -p ./usb/images                          \
              ./usb/preseed/debian                  \
              ./usb/preseed/ubuntu                  \
              ./usb/nocloud                         \
              ./usb/install.amd/debian/testing      \
              ./usb/install.amd/debian/stable       \
              ./usb/install.amd/debian/oldstable    \
              ./usb/install.amd/debian/oldoldstable \
              ./usb/install.amd/ubuntu/lunar        \
              ./usb/install.amd/ubuntu/kinetic      \
              ./usb/install.amd/ubuntu/jammy        \
              ./usb/install.amd/ubuntu/focal        \
              ./usb/install.amd/ubuntu/bionic
sudo mkdir -p ./usb/.disk
sudo touch ./usb/.disk/info
# --- config file copy --------------------------------------------------------
#sudo cp --preserve=timestamps    ./cfg/debian/preseed.cfg                               ./usb/preseed/debian/
sudo cp --preserve=timestamps    ./cfg/debian/sub_late_command.sh                       ./usb/preseed/debian/
#sudo cp --preserve=timestamps    ./cfg/ubuntu.desktop/preseed.cfg                       ./usb/preseed/ubuntu/
sudo cp --preserve=timestamps    ./cfg/ubuntu.desktop/sub_late_command.sh               ./usb/preseed/ubuntu/
sudo cp --preserve=timestamps    ./cfg/ubuntu.desktop/sub_success_command.sh            ./usb/preseed/ubuntu/
#sudo cp --preserve=timestamps    ./cfg/ubuntu.server/user-data                          ./usb/nocloud/
#sudo touch ./usb/nocloud/meta-data
#sudo touch ./usb/nocloud/vendor-data
#sudo touch ./usb/nocloud/network-config
sudo cp --preserve=timestamps    ./cfg/ubuntu.server/user-data                          ./usb/
sudo touch ./usb/meta-data
sudo touch ./usb/vendor-data
sudo touch ./usb/network-config
# --- config file change ------------------------------------------------------
sed -e 's~ /cdrom/preseed/~ /hd-media/preseed/debian/~g' ./cfg/debian/preseed.cfg         | sudo tee ./usb/preseed/debian/preseed.cfg > /dev/null
sed -e 's~ /cdrom/preseed/~ /hd-media/preseed/ubuntu/~g' ./cfg/ubuntu.desktop/preseed.cfg | sudo tee ./usb/preseed/ubuntu/preseed.cfg > /dev/null
sed -e 's/bind9-utils/bind9utils/'                          \
    -e 's/bind9-dnsutils/dnsutils/'                         \
           ./usb/preseed/debian/preseed.cfg                 \
| sudo tee ./usb/preseed/debian/preseed_old.cfg > /dev/null
sed -e 's/bind9-utils/bind9utils/'                          \
    -e 's/bind9-dnsutils/dnsutils/'                         \
    -e '/d-i partman\/unmount_active/ s/^#/ /g'             \
    -e '/d-i partman\/early_command/,/exit 0/ s/^#/ /g'     \
           ./usb/preseed/ubuntu/preseed.cfg                 \
| sudo tee ./usb/preseed/ubuntu/preseed_old.cfg > /dev/null
# --- initrd and vmlinuz (hd-media) -------------------------------------------
sudo cp --preserve=timestamps -r ./cfg/installer-hd-media/testing/!(boot.img.gz)       ./usb/install.amd/debian/testing/
sudo cp --preserve=timestamps -r ./cfg/installer-hd-media/stable/!(boot.img.gz)        ./usb/install.amd/debian/stable/
sudo cp --preserve=timestamps -r ./cfg/installer-hd-media/oldstable/!(boot.img.gz)     ./usb/install.amd/debian/oldstable/
sudo cp --preserve=timestamps -r ./cfg/installer-hd-media/oldoldstable/!(boot.img.gz)  ./usb/install.amd/debian/oldoldstable/
#sudo cp --preserve=timestamps -r ./cfg/installer-hd-media/focal-updates/!(boot.img.gz)  ./usb/install.amd/ubuntu/focal/
sudo cp --preserve=timestamps -r ./cfg/installer-hd-media/bionic-updates/!(boot.img.gz) ./usb/install.amd/ubuntu/bionic/
# --- initrd and vmlinuz (iso file) -------------------------------------------
sudo mount -r -o loop ./iso/lunar-live-server-amd64.iso ./mnt/
sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/lunar/
sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/lunar/
sudo umount ./mnt
sudo mount -r -o loop ./iso/ubuntu-22.10-live-server-amd64.iso ./mnt/
sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/kinetic/
sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/kinetic/
sudo umount ./mnt
sudo mount -r -o loop ./iso/ubuntu-22.04.2-live-server-amd64.iso ./mnt/
sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/jammy/
sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/jammy/
sudo umount ./mnt
sudo mount -r -o loop ./iso/ubuntu-20.04.6-live-server-amd64.iso ./mnt/
sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/focal/
sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/focal/
sudo umount ./mnt
#sudo mount -r -o loop ./iso/ubuntu-18.04.6-server-amd64.iso ./mnt/
#sudo cp --preserve=timestamps -r ./mnt/install/vmlinuz                                  ./usb/install.amd/ubuntu/bionic/
#sudo cp --preserve=timestamps -r ./mnt/install/initrd.gz                                ./usb/install.amd/ubuntu/bionic/
#sudo umount ./mnt
#sudo mount -r -o loop ./iso/lunar-desktop-amd64.iso ./mnt/
#sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/lunar/
#sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/lunar/
#sudo umount ./mnt
#sudo mount -r -o loop ./iso/lunar-desktop-legacy-amd64.iso ./mnt/
#sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/lunar/
#sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/lunar/
#sudo umount ./mnt
#sudo mount -r -o loop ./iso/ubuntu-22.10-desktop-amd64.iso ./mnt/
#sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/kinetic/
#sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/kinetic/
#sudo umount ./mnt
#sudo mount -r -o loop ./iso/ubuntu-22.04.2-desktop-amd64.iso ./mnt/
#sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/jammy/
#sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/jammy/
#sudo umount ./mnt
#sudo mount -r -o loop ./iso/ubuntu-20.04.6-desktop-amd64.iso ./mnt/
#sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/focal/
#sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/focal/
#sudo umount ./mnt
#sudo mount -r -o loop ./iso/ubuntu-18.04.6-desktop-amd64.iso ./mnt/
#sudo cp --preserve=timestamps -r ./mnt/casper/vmlinuz                                   ./usb/install.amd/ubuntu/bionic/
#sudo cp --preserve=timestamps -r ./mnt/casper/initrd                                    ./usb/install.amd/ubuntu/bionic/
#sudo umount ./mnt
# --- initrd ------------------------------------------------------------------
sudo rm -rf ./wrk/*
sudo bash -c 'for D in focal jammy kinetic lunar
do
  echo "$D"
  mkdir -p ./wrk/$D
  unmkinitramfs ./usb/install.amd/ubuntu/$D/initrd ./wrk/$D
  if [ -f ./wrk/$D/main/scripts/casper-premount/20iso_scan ]; then
    sed -i ./wrk/$D/main/scripts/casper-premount/20iso_scan \
        -e "s~\(/isodevice\) *rw~\1 ro~"
    pushd ./wrk/$D/main/ > /dev/null
      find . | cpio -R 0:0 -o -H newc | gzip > ../../../usb/install.amd/ubuntu/$D/initrd.img
    popd > /dev/null
  fi
done'
sudo rm -rf ./wrk/*
# --- iso file copy -----------------------------------------------------------
for F in \
  debian-testing-amd64-netinst.iso     \
  debian-11.6.0-amd64-netinst.iso      \
  debian-10.13.0-amd64-netinst.iso     \
  debian-9.13.0-amd64-netinst.iso      \
  lunar-live-server-amd64.iso          \
  ubuntu-22.10-live-server-amd64.iso   \
  ubuntu-22.04.2-live-server-amd64.iso \
  ubuntu-20.04.6-live-server-amd64.iso \
  ubuntu-18.04.6-server-amd64.iso
# ubuntu-18.04.6-live-server-amd64.iso \
# lunar-desktop-amd64.iso              \
# ubuntu-22.10-desktop-amd64.iso       \
# ubuntu-22.04.2-desktop-amd64.iso     \
# ubuntu-20.04.6-desktop-amd64.iso     \
# ubuntu-18.04.6-desktop-amd64.iso
do
  echo "copy $F"
  sudo cp --preserve=timestamps ./iso/$F ./usb/images/
done
# --- unmount -----------------------------------------------------------------
sudo umount ./usb
# =============================================================================
