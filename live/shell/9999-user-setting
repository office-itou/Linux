#!/bin/sh

#set -o ignoreeof					# Ctrl+Dで終了しない
#set +m								# ジョブ制御を無効にする
#set -e								# ステータス0以外で終了
#set -u								# 未定義変数の参照で終了
#set -e
#set -o allexport
#set -o

/bin/echo ""
/bin/echo "Start 9999-user-setting :::::::::::::::::::::::::::::::::::::::::::::::::::::::"

#. /lib/live/config.sh

#set -e

Cmdline ()
{
	# Reading kernel command line
	for _PARAMETER in ${LIVE_CONFIG_CMDLINE}
	do
		case "${_PARAMETER}" in
			debug   | \
			debugout)
				LIVE_DEBUGOUT="true"
				;;
			username=*)
				LIVE_USERNAME="${_PARAMETER#*username=}"
				;;
			password=*)
				LIVE_PASSWORD="${_PARAMETER#*password=}"
				;;
			emptypwd=*)
				LIVE_EMPTYPWD="${_PARAMETER#*emptypwd=}"
				;;
		esac
	done
}

Init ()
{
	:
}

Config ()
{
	# === Change user password ================================================
	if [ -n "${LIVE_USERNAME:-""}" ]; then
#		useradd ${LIVE_USERNAME}
		if [ "${LIVE_EMPTYPWD:-""}" = "true" ]; then
			/bin/echo ""
			/bin/echo "Remove user password ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
			passwd -d ${LIVE_USERNAME}
			LIVE_PASSWORD=""
		elif [ -n "${LIVE_PASSWORD:-""}" ]; then
			/bin/echo ""
			/bin/echo "Change user password ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
			/bin/echo -e "${LIVE_PASSWORD}\n${LIVE_PASSWORD}" | passwd ${LIVE_USERNAME}
		fi
		# === Change smb password =============================================
		if [ -n "`which smbpasswd 2> /dev/null`" ]; then
			/bin/echo ""
			/bin/echo "Create an smb user ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
			smbpasswd -a ${LIVE_USERNAME} -n
			/bin/echo ""
			/bin/echo "Change smb password :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
			/bin/echo -e "${LIVE_PASSWORD}\n${LIVE_PASSWORD}" | smbpasswd ${LIVE_USERNAME}
		fi
		# === Change user mode ====================================================
		if [ `passwd -S ${LIVE_USERNAME} | awk '{print $7;}'` -ne -1 ]; then
			/bin/echo ""
			/bin/echo "Change user mode ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
			usermod -f -1 ${LIVE_USERNAME}
		fi
	fi

	# === Change sshd configure ===============================================
	if [ -f /etc/ssh/sshd_config ]; then
		/bin/echo ""
		/bin/echo "Change sshd configure :::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
		sed -i /etc/ssh/sshd_config \
		    -e 's/^#*[ \t]*\(PasswordAuthentication\)[ \t]*.*$/\1 yes/g'
	fi

	# === Setup VMware configure ==============================================
	if [ "`lscpu | grep -i vmware`" != "" ]; then
		/bin/echo ""
		/bin/echo "Setup VMware configure ::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
		mkdir -p /media/hgfs
		chmod a+w /media/hgfs
		cat <<- _EOT_ >> /etc/fstab
			.host:/ /media/hgfs fuse.vmhgfs-fuse allow_other,auto_unmount,defaults,users 0 0
_EOT_
		cat <<- _EOT_ >> /etc/fuse.conf
			user_allow_other
_EOT_
	fi

	# === Change gdm3 configure ===============================================
	if [ -f /etc/gdm3/custom.conf ] && [ -n "${LIVE_USERNAME:-""}" ]; then
		/bin/echo ""
		/bin/echo "Change gdm3 configure :::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
		OLD_IFS=${IFS}
		IFS= INS_STR=$(
			cat <<- _EOT_ | sed ':l; N; s/\n//; b l;'
				WaylandEnable=false\\n
				AutomaticLoginEnable=true\n
				AutomaticLogin=${LIVE_USERNAME}\\n
				TimedLoginEnable=false\\n
_EOT_
		)
		IFS=${OLD_IFS}
		sed -i /etc/gdm3/custom.conf \
		    -e '/^\[daemon\]/,/^\[/ {/^[#|\[]/! s/\(.*\)$/#  \1/g}' \
		    -e "/^\\[daemon\\]/a ${INS_STR}"
		if [ ! -f /etc/gdm3/daemon.conf ]; then
			/bin/echo ""
			/bin/echo "Create gdm3 daemon.conf :::::::::::::::::::::::::::::::::::::::::::::::::::::::"
			touch /etc/gdm3/daemon.conf
		fi
	fi

	# === Change video mode configure =========================================
	if [ -f /etc/X11/Xsession.d/21xvidemode ]; then
		/bin/echo ""
		/bin/echo "Change video mode configure :::::::::::::::::::::::::::::::::::::::::::::::::::"
		sed -i /etc/X11/Xsession.d/21xvidemode \
		    -e '1i {\nsleep 10' \
		    -e '$a } &'
	fi
}

Debug ()
{
	if [ -z ${LIVE_DEBUGOUT:-""} ]; then
		return 0
	fi
	# === Display of parameters ===============================================
	/bin/echo ""
	/bin/echo "Display of parameters :::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
	set | grep -e "^LIVE_.*="
	/bin/echo "-------------------------------------------------------------------------------"
	dconf dump /org/gnome/desktop/screensaver/
	/bin/echo "-------------------------------------------------------------------------------"
	dconf dump /org/gnome/todo/
	/bin/echo "-------------------------------------------------------------------------------"
	printenv | sort
	/bin/echo "-------------------------------------------------------------------------------"
	for F in $(find "/lib/systemd/system/" -type f -name "*.service" -print | sort -u)
	do
		S=`basename $F`
		R=`systemctl is-enabled "$S" || :`
		/bin/echo "$S: $R"
	done
	/bin/echo "-------------------------------------------------------------------------------"
	mount | sort
	/bin/echo "-------------------------------------------------------------------------------"
	set -o
	/bin/echo "-------------------------------------------------------------------------------"
}

Cmdline
Init
Config
Debug

# === Creating state file =====================================================
/bin/echo ""
/bin/echo "Creating state file :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
touch /var/lib/live/config/9999-user-setting

/bin/echo ""
/bin/echo "End 9999-user-setting :::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
