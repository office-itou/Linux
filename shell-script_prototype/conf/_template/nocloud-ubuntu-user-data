#cloud-config
autoinstall:
  version: 1
# =============================================================================
# debug:
#   verbose: true
#   output:
# =============================================================================
# refresh-installer:
#   update: true
#   channel: latest/stable
#   channel: stable/ubuntu-$REL
#   channel: latest/edge
#   channel: latest/beta
# stable candidate edge beta
# =============================================================================
# apt:
#   disable_components: []
#   fallback: abort
#   geoip: true
#   mirror-selection:
#     primary:
#     - country-mirror
#     - arches:
#       - amd64
#       - i386
#       uri: http://archive.ubuntu.com/ubuntu
#     - arches:
#       - s390x
#       - arm64
#       - armhf
#       - powerpc
#       - ppc64el
#       - riscv64
#       uri: http://ports.ubuntu.com/ubuntu-ports
#   preserve_sources_list: false
# =============================================================================
  storage:
    grub:
      reorder_uefi: false
    layout:
      name: lvm
      sizing-policy: all
      match:
        path: /dev/nvme0n1
#       ssd: true
    swap:
      size: 0
# -----------------------------------------------------------------------------
# /dev/nvme0n1p1: 512MB: /boot/efi
#      nvme0n1p2: 512MB: /boot
#      nvme0n1p3:    -1: vg00
# lv-root       :  100%: /
# storage:
#   config:
#   - { type: disk, ptable: gpt, path: /dev/nvme0n1, wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-nvme0n1 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock, flag: boot, number: 1, preserve: false, grub_device: true, id: partition-0 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock,             number: 2, preserve: false,                    id: partition-1 }
#   - { type: partition, device: disk-nvme0n1, size:   -1, wipe: superblock,             number: 3, preserve: false,                    id: partition-2 }
#   - { type: lvm_volgroup, devices: [partition-2], preserve: false, name: vg00, id: lvm_volgroup-0 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-0, size: 100%, wipe: superblock, preserve: false, name: lv-root, id: lvm_partition-0 }
#   - { type: format, fstype: fat32, volume: partition-0,     preserve: false, id: format-0 }
#   - { type: format, fstype: ext4,  volume: partition-1,     preserve: false, id: format-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-0, preserve: false, id: format-2 }
#   - { type: mount, device: format-0, path: /boot/efi, id: mount-0 }
#   - { type: mount, device: format-1, path: /boot    , id: mount-1 }
#   - { type: mount, device: format-2, path: /        , id: mount-2 }
# -----------------------------------------------------------------------------
# /dev/nvme0n1p1: 512MB: /boot/efi
#      nvme0n1p2: 512MB: /boot
#      nvme0n1p3:    -1: vg00
# /dev/sda1:         -1: vg01
# lv-root       :  100%: /
# lv-home       :  100%: /home
# storage:
#   config:
#   - { type: disk, ptable: gpt, path: /dev/nvme0n1, wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-nvme0n1 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock, flag: boot, number: 1, preserve: false, grub_device: true, id: partition-0 }
#   - { type: partition, device: disk-nvme0n1, size: 512M, wipe: superblock,             number: 2, preserve: false,                    id: partition-1 }
#   - { type: partition, device: disk-nvme0n1, size:   -1, wipe: superblock,             number: 3, preserve: false,                    id: partition-2 }
#   - { type: lvm_volgroup, devices: [partition-2], preserve: false, name: vg00, id: lvm_volgroup-0 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-0, size: 100%, wipe: superblock, preserve: false, name: lv-root, id: lvm_partition-0 }
#   - { type: format, fstype: fat32, volume: partition-0,     preserve: false, id: format-0 }
#   - { type: format, fstype: ext4,  volume: partition-1,     preserve: false, id: format-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-0, preserve: false, id: format-2 }
#   - { type: mount, device: format-0, path: /boot/efi, id: mount-0 }
#   - { type: mount, device: format-1, path: /boot    , id: mount-1 }
#   - { type: mount, device: format-2, path: /        , id: mount-2 }
#   - { type: disk, ptable: gpt, path: /dev/sda,     wipe: superblock-recursive, preserve: false, name: '', grub_device: false, id: disk-sda     }
#   - { type: partition, device: disk-sda,     size:   -1, wipe: superblock,             number: 1, preserve: false,                    id: partition-3 }
#   - { type: lvm_volgroup, devices: [partition-3], preserve: false, name: vg01, id: lvm_volgroup-1 }
#   - { type: lvm_partition, volgroup: lvm_volgroup-1, size: 100%, wipe: superblock, preserve: false, name: lv-home, id: lvm_partition-1 }
#   - { type: format, fstype: ext4,  volume: lvm_partition-1, preserve: false, id: format-3 }
#   - { type: mount, device: format-3, path: /home    , id: mount-3 }
# =============================================================================
  identity:
    hostname: sv-ubuntu.workgroup
    realname: 'Master'
    username: master
    password: '$6$kdHidDqdYa0d4aLf$qTAB/q6W7pi2wjNjSOs7r3CwzQfMdmqmmPR2qwgbLW44d5xJBtduoGgNJ.GpUWebQrOpy2QzUiH5AtrIeoLuh/'
#   plain_text_passwd: "master"
#   echo "master" | openssl passwd -6 -stdin
#   (run in an environment equivalent to the OS to be installed)
# =============================================================================
  locale: ja_JP.UTF-8
  keyboard:
    layout: jp
  timezone: Asia/Tokyo
# =============================================================================
# network:
#   version: 2
#   ethernets: {}
# --- ipv4: dhcp --------------------------------------------------------------
# network:
#   version: 2
#   ethernets:
#     any-ens:
#       match:
#         name: "en*"
#       dhcp4: true
#       dhcp6: true
#       ipv6-privacy: true
#     any-eth:
#       match:
#         name: "et*"
#       dhcp4: true
#       dhcp6: true
#       ipv6-privacy: true
# --- ipv4: static ------------------------------------------------------------
# network:
#   version: 2
#   ethernets:
#     any:
#       match:
#         name: "en*"
#       dhcp4: false
#       addresses:
#       - 192.168.1.1/24
#       gateway4: 192.168.1.254
#       nameservers:
#         search:
#         - workgroup
#         addresses:
#         - ::1
#         - 127.0.0.1
#         - 192.168.1.254
#       dhcp6: true
#       ipv6-privacy: true
# =============================================================================
# ssh:
#   allow-pw: true
#   authorized-keys: []
#   install-server: true
# =============================================================================
# source:
#   id: ubuntu-server
#   search_drivers: true
#   id: ubuntu-desktop
#   search_drivers: true
# -----------------------------------------------------------------------------
# codecs:
#   install: true
# drivers:
#   install: true
# =============================================================================
# updates: security
  updates: all
  package_update: true
  package_upgrade: true
  packages:
  - apparmor
  - apparmor-utils
  - usrmerge
  - sudo
  - firewalld
  - traceroute
  - network-manager
  - bash-completion
  - build-essential
  - curl
  - vim
  - bc
  - tree
  - shellcheck
  - clamav
  - openssh-server
  - systemd-resolved
  - dnsmasq
  - bind9-dnsutils
  - apache2
  - samba
  - smbclient
  - cifs-utils
  - libnss-winbind
  - open-vm-tools
  - open-vm-tools-desktop
# - ubuntu-desktop
# - ubuntu-gnome-desktop
# - language-pack-ja
# - language-pack-gnome-ja
# - fonts-noto
# - im-config
# - zenity
# - ibus-mozc
# - fcitx5-mozc
# - mozc-utils-gui
# - gnome-shell-extensions
# - libreoffice-l10n-ja
# - libreoffice-help-ja
# - firefox-locale-ja
# - thunderbird
# - thunderbird-locale-ja
# - rhythmbox
# - ffmpeg
# - gstreamer1.0-libav
# -----------------------------------------------------------------------------
# - usrmerge
# - tftpd-hpa
# -----------------------------------------------------------------------------
# - kasumi
# - ibus-anthy
# - ibus-mozc
# - mozc-utils-gui
# -----------------------------------------------------------------------------
# - openvswitch-switch
# -----------------------------------------------------------------------------
# - pxelinux
# - syslinux-common
# - syslinux-efi
# -----------------------------------------------------------------------------
# - hdparm
# - nvme-cli
# -----------------------------------------------------------------------------
# - avahi-daemon
# - bind9
# - bind9-utils
# - bind9-dnsutils
# - resolvconf
# - isc-dhcp-server
# - minidlna
# =============================================================================
  user-data:
    ntp:
      servers:
      - ntp.nict.jp
    runcmd:
    - [ sh, -c, '
      exec 2>&1;
      export LANG=C;
      _FUNC_NAME="runcmd";
      _COMD_LINE="$(cat /proc/cmdline)";
      for _LINE in ${_COMD_LINE:-};
      do
        case "${_LINE}" in
          debug              ) _FLAG_DBGS="true"; set -x;;
          debugout|dbg|dbgout) _FLAG_DBGS="true";;
          *) ;;
        esac;
      done;
      _DIRS_TGET="/target";
      if [ ! -d "${_DIRS_TGET:-}/." ]; then
        _DIRS_TGET="";
      fi;
      _DIRS_INST="/var/adm/autoinst";
      _PATH_LOGS="${_DIRS_TGET:-}${_DIRS_INST}/${_FUNC_NAME}.log";
      mkdir -p "${_DIRS_TGET:-}${_DIRS_INST}";
      chmod 0600 "${_DIRS_TGET:-}${_DIRS_INST}";
      {
        _time_start=$(date +%s);
        printf "\033[m\033[45m%s\033[m\n" "$(date -d "@${_time_start}" +"%Y/%m/%d %H:%M:%S" || true) processing start";
        _time_end=$(date +%s);
        _time_elapsed=$((_time_end-_time_start));
        printf "\033[m\033[45m%s\033[m\n" "$(date -d "@${_time_end}" +"%Y/%m/%d %H:%M:%S" || true) processing end";
        printf "elapsed time: %dd%02dh%02dm%02ds\n" $((_time_elapsed/86400)) $((_time_elapsed%86400/3600)) $((_time_elapsed%3600/60)) $((_time_elapsed%60));
      } >> "${_PATH_LOGS}" 2>&1;
      exit 0;
    ' ]
#   timezone: Asia/Tokyo
# =============================================================================
# runcmd:
# - export LANG=C;
#   echo "=== start runcmd ===";
#   echo "=== complete runcmd ===";
#   ls -l /etc/resolv.conf*;
#   rm /etc/resolv.conf;
#   ln -s /etc/resolv.conf.manually-configured /etc/resolv.conf;
#   ls -l /etc/resolv.conf*;
# =============================================================================
  power_state:
    delay: now
    mode: reboot
    message: Rebooting machine
    timeout: 2
    condition: true
# =============================================================================
  early-commands:
  - [ sh, -c, '
      exec 2>&1;
      export LANG=C;
      _FUNC_NAME="early-commands";
      _COMD_LINE="$(cat /proc/cmdline)";
      for _LINE in ${_COMD_LINE:-};
      do
        case "${_LINE}" in
          debug              ) _FLAG_DBGS="true"; set -x;;
          debugout|dbg|dbgout) _FLAG_DBGS="true";;
          *) ;;
        esac;
      done;
      _DIRS_TGET="/target";
      if [ -n "${_DIRS_TGET:-}" ] && [ ! -d "${_DIRS_TGET:-}/." ]; then
        _DIRS_TGET="";
      fi;
      _DIRS_INST="/var/adm/autoinst";
      _PATH_LOGS="${_DIRS_TGET:-}${_DIRS_INST}/${_FUNC_NAME}.log";
      mkdir -p "${_DIRS_TGET:-}${_DIRS_INST}";
      chmod 0600 "${_DIRS_TGET:-}${_DIRS_INST}";
      {
        _time_start=$(date +%s);
        printf "\033[m\033[45m%s\033[m\n" "$(date -d "@${_time_start}" +"%Y/%m/%d %H:%M:%S" || true) processing start";
        _PATH="/var/lib/cdebconf/questions.dat";
        if [ -f "${_PATH}" ]; then
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "find ${_PATH##*/}";
          _PATH_SEED="$(awk ''''''$1=="Name:"&&($2=="preseed/url"||$2=="preseed/file"),$1=="" {if ($1=="Value:") {print $2;}}'''''' "${_PATH}")";
          _DIRS_COMD="${_PATH_SEED%/*}";
          _DIRS_COMD="${_DIRS_COMD%/*}/autoinst";
          cp -a "${_PATH}" "${_DIRS_TGET:-}${_DIRS_INST}/";
        fi;
        for _LINE in ${_COMD_LINE:-};
        do
          case "${_LINE}" in
            debug|debugout|dbg|dbgout) _FLAG_DBGS="true"                            ;;
            iso-url=*.iso |url=*.iso )                                              ;;
            preseed/url=* |url=*     ) _PATH_SEED="${_LINE#*url=}";
                                       _DIRS_COMD="${_PATH_SEED%/*}";
                                       _DIRS_COMD="${_DIRS_COMD%/*}/autoinst";;
            preseed/file=*|file=*    ) _PATH_SEED="${_LINE#*file=}";
                                       _DIRS_COMD="${_PATH_SEED%/*}";
                                       _DIRS_COMD="${_DIRS_COMD%/*}/autoinst";;
            ds=nocloud*              ) _PATH_SEED="${_LINE#*ds=nocloud*=}";
                                       _PATH_SEED="${_PATH_SEED%/}/user-data";
                                       _DIRS_COMD="${_PATH_SEED%/}";
                                       _DIRS_COMD="${_DIRS_COMD%/nocloud*}/autoinst";;
            inst.ks=*                ) _PATH_SEED="${_LINE#*inst.ks=}";
                                       case "${_PATH_SEED}" in
                                         http:*|https:*|ftp:*  )
                                           _DIRS_COMD="${_PATH_SEED%/*}";
                                           _DIRS_COMD="${_DIRS_COMD%/*}/autoinst";;
                                         hd:sr0:*|cdrom|cdrom:*)
                                           _PATH_SEED="/mnt/install/repo/${_PATH_SEED#*:*/}";
                                           _DIRS_COMD="${_PATH_SEED%/*}";
                                           _DIRS_COMD="${_DIRS_COMD%/*}/autoinst";;
                                         nfs:*                 ) ;;
                                         hd:*                  ) ;;
                                         hmc                   ) ;;
                                         *) ;;
                                       esac;;
            autoyast=*               ) _PATH_SEED="${_LINE#*autoyast=}"             ;;
            *) ;;
          esac;
        done;
        if [ -n "${_FLAG_DBGS:-}" ]; then
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "debug print";
          printf "%s: %s=[%s]\n" "${_FUNC_NAME}" "LANG      " "${LANG:-}";
          printf "%s: %s=[%s]\n" "${_FUNC_NAME}" "_FUNC_NAME" "${_FUNC_NAME:-}";
          printf "%s: %s=[%s]\n" "${_FUNC_NAME}" "_DIRS_TGET" "${_DIRS_TGET:-}";
          printf "%s: %s=[%s]\n" "${_FUNC_NAME}" "_DIRS_INST" "${_DIRS_INST:-}";
          printf "%s: %s=[%s]\n" "${_FUNC_NAME}" "_PATH_LOGS" "${_PATH_LOGS:-}";
          printf "%s: %s=[%s]\n" "${_FUNC_NAME}" "_PATH_SEED" "${_PATH_SEED:-}";
          printf "%s: %s=[%s]\n" "${_FUNC_NAME}" "_DIRS_COMD" "${_DIRS_COMD:-}";
        fi;
        if [ ! -e /run/systemd/resolve/stub-resolv.conf ]; then
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "copy stub-resolv.conf";
          mkdir -p /run/systemd/resolve;
          cp -p /etc/resolv.conf /run/systemd/resolve/stub-resolv.conf;
        fi;
        {
          echo "nameserver 8.8.8.8";
          echo "nameserver 8.8.4.4";
        } >>  /etc/resolv.conf;
        if [ -n "${_PATH_SEED:-}" ]; then
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "file copy";
          for _PATH in "${_PATH_SEED}"                 
                       "${_DIRS_COMD}/cmd_early.sh"    
                       "${_DIRS_COMD}/cmd_late.sh"     
                       "${_DIRS_COMD}/cmd_partition.sh"
                       "${_DIRS_COMD}/cmd_run.sh";     
          do
            printf "### %s: %s ###\n" "${_FUNC_NAME}" "copy: [${_PATH}]";
            case "${_PATH}" in
              http:* | https:*) wget --output-document "${_DIRS_TGET:-}${_DIRS_INST}/${_PATH##*/}" "${_PATH}";;
              file:* | /*     ) cp -a "/${_PATH#*:*/}" "${_DIRS_TGET:-}${_DIRS_INST}/";;
              *) ;;
            esac;
            chmod 0700 "${_DIRS_TGET:-}${_DIRS_INST}/${_PATH##*/}";
          done;
        fi;
        _PATH_EXEC="${_DIRS_TGET:-}${_DIRS_INST}/cmd_partition.sh";
        if [ -e "${_PATH_EXEC}" ]; then
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "exec: ${_PATH_EXEC}";
          if sh -c "${_PATH_EXEC} nvme0n1"; then
            printf "### %s: %s ###\n" "${_FUNC_NAME}" "complete: ${_PATH_EXEC}";
          else
            printf "### %s: %s ###\n" "${_FUNC_NAME}" "failed: ${_PATH_EXEC}";
          fi;
        fi;
        _time_end=$(date +%s);
        _time_elapsed=$((_time_end-_time_start));
        printf "\033[m\033[45m%s\033[m\n" "$(date -d "@${_time_end}" +"%Y/%m/%d %H:%M:%S" || true) processing end";
        printf "elapsed time: %dd%02dh%02dm%02ds\n" $((_time_elapsed/86400)) $((_time_elapsed%86400/3600)) $((_time_elapsed%3600/60)) $((_time_elapsed%60));
      } >> "${_PATH_LOGS}" 2>&1;
      exit 0;
    ' ]
# =============================================================================
  late-commands:
  - [ sh, -c, '
      exec 2>&1;
      export LANG=C;
      _FUNC_NAME="late-commands";
      _COMD_LINE="$(cat /proc/cmdline)";
      for _LINE in ${_COMD_LINE:-};
      do
        case "${_LINE}" in
          debug              ) _FLAG_DBGS="true"; set -x;;
          debugout|dbg|dbgout) _FLAG_DBGS="true";;
          *) ;;
        esac;
      done;
      _DIRS_TGET="/target";
      if [ ! -d "${_DIRS_TGET:-}/." ]; then
        _DIRS_TGET="";
      fi;
      _DIRS_INST="/var/adm/autoinst";
      _PATH_LOGS="${_DIRS_TGET:-}${_DIRS_INST}/${_FUNC_NAME}.log";
      mkdir -p "${_DIRS_TGET:-}${_DIRS_INST}";
      chmod 0600 "${_DIRS_TGET:-}${_DIRS_INST}";
      {
        _time_start=$(date +%s);
        printf "\033[m\033[45m%s\033[m\n" "$(date -d "@${_time_start}" +"%Y/%m/%d %H:%M:%S" || true) processing start";
        if [ -n "${_DIRS_TGET:-}" ] && [ -d "${_DIRS_INST}/." ]; then
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "file copy";
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "copy: ${_DIRS_INST}";
          cp -a "${_DIRS_INST}/." "${_DIRS_TGET:-}${_DIRS_INST}";
        fi;
        _PATH_EXEC="${_DIRS_INST}/cmd_late.sh";
        if [ -e "${_DIRS_TGET:-}${_PATH_EXEC}" ]; then
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "exec: ${_PATH_EXEC}";
          if [ -n "${SUBIQUITY_ROOT:-}" ]; then
            printf "### %s: %s ###\n" "${_FUNC_NAME}" "exec: curtin: ${_PATH_EXEC}";
            curtin in-target --target="${_DIRS_TGET:-}" -- sh -c "${_PATH_EXEC}";
          else
            printf "### %s: %s ###\n" "${_FUNC_NAME}" "exec: in-target: ${_PATH_EXEC}";
            in-target --pass-stdout sh -c "${_PATH_EXEC}";
          fi;
          printf "### %s: %s ###\n" "${_FUNC_NAME}" "complete: ${_PATH_EXEC}";
        fi;
        _time_end=$(date +%s);
        _time_elapsed=$((_time_end-_time_start));
        printf "\033[m\033[45m%s\033[m\n" "$(date -d "@${_time_end}" +"%Y/%m/%d %H:%M:%S" || true) processing end";
        printf "elapsed time: %dd%02dh%02dm%02ds\n" $((_time_elapsed/86400)) $((_time_elapsed%86400/3600)) $((_time_elapsed%3600/60)) $((_time_elapsed%60));
      } >> "${_PATH_LOGS}" 2>&1;
      exit 0;
    ' ]
# =============================================================================
# memo:
#   https://ubuntu.com/server/docs/install/autoinstall-reference
#   https://github.com/canonical/cloud-init/
#   https://cloudinit.readthedocs.io/
#   https://curtin.readthedocs.io/
#   https://github.com/canonical/curtin
# =============================================================================
# Created at 202x/xx/xx xx:xx:xx
# === EOF =====================================================================
